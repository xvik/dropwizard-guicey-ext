plugins {
    id 'ru.vyarus.github-info' version '1.3.0' apply false
    id 'ru.vyarus.quality' version '4.7.0' apply false

    id 'jacoco'
    id 'java-platform'
    id 'ru.vyarus.java-lib' version '2.3.0'
    id 'net.researchgate.release' version '2.8.1'
    id 'io.github.gradle-nexus.publish-plugin' version '1.1.0'
    id 'com.github.ben-manes.versions' version '0.39.0'
}

wrapper {
    gradleVersion = '6.9'
}

description = 'Dropwizard-guicey extensions'

ext {
    guicey = '5.4.0'
    guiceExtAnn = '1.4.0'
}

// root project is a BOM (like maven)
dependencies {
    // inherited BOMs declaration
    api platform("ru.vyarus:dropwizard-guicey:$guicey")
    constraints {
        api 'io.dropwizard.modules:dropwizard-jdbi:2.0.24'
        api "ru.vyarus:guice-ext-annotations:$guiceExtAnn"
        api 'ru.vyarus:guice-validator:2.0.1'
        api 'com.h2database:h2:2.0.202'
        api 'io.dropwizard.modules:dropwizard-flyway:2.0.25-2'

        // add subprojects to BOM
        project.subprojects.each { api it }
    }
}

javaLib {
    // aggregated test and coverage reports
    aggregateReports()
    // publish root BOM as custom artifact
    bom {
        artifactId = 'guicey-bom'
        description = 'Guicey extensions BOM'
    }
}

pom {
    delegate.properties {
        'guicey.version' guicey
        'guice-ext-annotations.version' guiceExtAnn
    }
}

// maven publication related configuration applied to all projects
allprojects {
    apply plugin: 'project-report'
    apply plugin: 'ru.vyarus.github-info'
    apply plugin: 'ru.vyarus.java-lib'
    apply plugin: 'signing'

    repositories { mavenLocal(); mavenCentral() }

    group = 'ru.vyarus.guicey'

    github {
        user = 'xvik'
        license = 'MIT'
    }

    // delay required because java plugin is activated only in subprojects and without it
    // pom closure would reference root project only
    afterEvaluate {
        pom {
            developers {
                developer {
                    id 'xvik'
                    name 'Vyacheslav Rusakov'
                    email 'vyarus@gmail.com'
                }
            }
        }
    }

    // don't publish gradle metadata artifact
    javaLib.withoutGradleMetadata()
}

// all sub-modules are normal java modules, using root BOM (like maven)
subprojects {
    apply plugin: 'groovy'
    apply plugin: 'jacoco'
    apply plugin: 'ru.vyarus.quality'
    apply plugin: 'com.github.ben-manes.versions'

    sourceCompatibility = 1.8

    // common dependencies for all modules
    dependencies {
        implementation platform(project(':'))

        compileOnly 'com.github.spotbugs:spotbugs-annotations:4.5.0'
        compileOnly 'com.google.code.findbugs:jsr305:3.0.2'

        implementation 'ru.vyarus:dropwizard-guicey'

        testImplementation 'org.spockframework:spock-core'
        testImplementation 'io.dropwizard:dropwizard-testing'
        testImplementation 'com.github.stefanbirkner:system-rules'
        testImplementation 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.1'
    }

    javaLib {
        // java 9 auto module name
        autoModuleName = "$group.${project.name.replace('guicey-', 'ru.vyarus.dropwizard.guicey.').replace('-', '.')}"
        // use only direct dependencies in the generated pom, removing BOM mentions
        pom.removeDependencyManagement()
    }

    test {
//        useJUnitPlatform()
        testLogging {
            events 'skipped', 'failed'
            exceptionFormat 'full'
        }
        maxHeapSize = '512m'
    }

    dependencyUpdates.revision = 'release'
}

// dependency on all subprojects required for release validation
check.dependsOn subprojects.check

nexusPublishing {
    repositories {
        sonatype {
            username = findProperty('sonatypeUser')
            password = findProperty('sonatypePassword')
        }
    }
}

// Required signing properties for release: signing.keyId, signing.password and signing.secretKeyRingFile
// (https://docs.gradle.org/current/userguide/signing_plugin.html#sec:signatory_credentials)

// release manages only root project (subprojects will be checked and released implicitly)
afterReleaseBuild {
    dependsOn 'publishToSonatype'
    dependsOn subprojects.collect {":$it.name:publishToSonatype" }
    dependsOn 'closeAndReleaseSonatypeStagingRepository'
    doLast {
        logger.warn "RELEASED $project.group:$project.name:$project.version"
    }
}

