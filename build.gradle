plugins {
    id 'com.gradle.build-scan' version '2.4.2'
    id 'ru.vyarus.java-lib' version '1.1.2' apply false
    id 'ru.vyarus.github-info' version '1.1.0' apply false
    id 'ru.vyarus.quality' version '3.4.0' apply false
    id 'com.jfrog.bintray' version '1.8.4' apply false
    id "io.spring.dependency-management" version "1.0.8.RELEASE" apply false

    id 'base'
    id 'jacoco'
    id 'net.researchgate.release' version '2.8.1'
    id 'com.github.ben-manes.versions' version '0.25.0'
}

wrapper {
    gradleVersion = '5.6.2'
}

description = 'Dropwizard-guicey extensions'

allprojects {
    apply plugin: 'project-report'
    apply plugin: 'com.jfrog.bintray'

    repositories { jcenter(); mavenCentral(); mavenLocal(); maven { url 'https://jitpack.io' } }

    bintray {
        user = findProperty('bintrayUser')
        key = findProperty('bintrayKey')
        pkg {
            repo = 'xvik'
            name = rootProject.name
            desc = rootProject.description
            labels = ['dropwizard', 'guice']
            publicDownloadNumbers = true
        }
    }
}

subprojects {
    apply plugin: 'groovy'
    apply plugin: 'jacoco'
    apply plugin: 'ru.vyarus.java-lib'
    apply plugin: 'ru.vyarus.quality'
    apply plugin: 'ru.vyarus.github-info'
    apply plugin: 'com.github.ben-manes.versions'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = 1.8

    ext {
        guicey = '5.0.0-rc.3'
        guiceExtAnn = '1.3.0'
    }

    dependencyManagement {
        imports {
            mavenBom "ru.vyarus:dropwizard-guicey:$guicey"
        }
        dependencies {
            // jdbi deprecated by dropwizard and moved to separate module https://github.com/dropwizard/dropwizard-jdbi
            dependency "io.dropwizard:dropwizard-jdbi:2.0.0-rc9"
            dependency "ru.vyarus:guice-ext-annotations:$guiceExtAnn"
            dependency 'com.h2database:h2:1.4.199'
            dependency 'io.dropwizard.modules:dropwizard-flyway:1.3.0-4'
        }
    }
    dependencies {
        provided 'com.google.code.findbugs:jsr305:3.0.2'
        provided 'com.google.code.findbugs:annotations:3.0.1u2'

        compile "ru.vyarus:dropwizard-guicey"

        testCompile "org.spockframework:spock-core"
        testCompile "io.dropwizard:dropwizard-testing"
        testCompile 'com.github.stefanbirkner:system-rules'
    }

    group = 'ru.vyarus.guicey'

    github {
        user = 'xvik'
        repository = rootProject.name
        license = 'MIT'
        licenseUrl = github.rawFileUrl('LICENSE');
        changelogFile = 'CHANGELOG.md'
        vcsUrl = 'https://github.com/xvik/dropwizard-guicey-ext'
    }

    pom {
        developers {
            developer {
                id 'xvik'
                name 'Vyacheslav Rusakov'
                email 'vyarus@gmail.com'
            }
        }
    }

    jar {
        manifest {
            attributes 'Automatic-Module-Name': project.name.replace('guicey-', 'dropwizard-guicey.')
        }
    }

    bintray {
        publications = ['maven']
    }

    test {
        testLogging {
            events 'skipped', 'failed'
            exceptionFormat 'full'
        }
        maxHeapSize = '512m'
    }
    jacocoTestReport.reports.xml.enabled = true

    dependencyUpdates.revision = 'release'

    task showDependenciesTree(dependsOn: 'htmlDependencyReport', group: 'help', description:
            'Generates dependencies tree report and opens it in browser') {
        doLast {
            java.awt.Desktop.getDesktop().open(file("build/reports/project/dependencies/root.${project.name}.html"))
        }
    }
}

/*
 Each module published separately: subprojects simply upload files to bintray and root project will
 publish/generate signatures/sync with maven central.
 Note: plugin will find bintray tasks in submodules and depend on it so order will be always correct.
 */
bintray {
    publish = true
    pkg {
        version {
            gpg {
                sign = true
                passphrase = findProperty('gpgPassphrase')
            }
            mavenCentralSync {
                sync = true
                user = findProperty('sonatypeUser')
                password = findProperty('sonatypePassword')
            }
        }
    }
}

// by default, task depends on subproject tasks directly, which breaks dependencies graph
bintrayUpload.dependsOn subprojects.collect { ":$it.name:bintrayUpload" }

// dependency on all subprojects required for release validation
check.dependsOn subprojects.check

// release manages only root project (subprojects will be checked and released implicitly)
afterReleaseBuild {
    dependsOn = ['bintrayUpload']
    doLast {
        logger.warn "RELEASED $project.group:$project.name:$project.version"
    }
}

task testReport(type: TestReport, description: 'Generates an aggregate test report') {
    destinationDir = file("${buildDir}/reports/tests")
    reportOn subprojects.test
}

task jacocoMerge(type: JacocoMerge, description: 'Merge coverage results for aggregated report generation') {
    executionData = files(subprojects.collect {it.file('build/jacoco/test.exec')})
    doFirst {
        executionData = files(executionData.findAll { it.exists() })
    }
}

task jacocoTestReport(type: JacocoReport, description: 'Generates aggregated coverage report') {
    dependsOn jacocoMerge
    executionData jacocoMerge.destinationFile
    sourceDirectories.setFrom(files(subprojects.sourceSets.main.allSource.srcDirs))
    classDirectories.setFrom(files(subprojects.sourceSets.main.output))
    reports.xml.enabled = true
}

htmlDependencyReport.projects = allprojects

buildScan {
    termsOfServiceUrl = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'
    publishOnFailure()
}

